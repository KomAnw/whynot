import 'swiper/css';
import type { Swiper as SwiperType } from 'swiper';
import { Swiper, SwiperSlide } from 'swiper/react';
import styled from 'styled-components';
import { breakpoints, paths } from 'src/components/App/constants';
import { H1 } from 'src/design/H1';
import { Link } from 'src/components/Link';
import { Text } from 'src/design/Text';
import { useState } from 'react';
import { LinkText } from 'src/design/LinkText';
import chatGptSvg from 'assets/images/chatgpt.svg';
import { Typography } from 'src/design/Typography';
import slides from './slides';

const { menu } = paths;

const Tutorial = () => {
  const [swiperInstance, setSwiperInstance] = useState<SwiperType | null>(null);
  const [slideNumber, setSlideNumber] = useState(0);

  return (
    <OuterContainer>
      <InnerContainer>
        {slideNumber < 4 ? <StyedH1>Story:</StyedH1> : <StyedH1>Tutorial:</StyedH1>}
        <Swiper
          spaceBetween={20}
          slidesPerView={1}
          onSwiper={swiper => setSwiperInstance(swiper)}
          onSlideChange={swiper => setSlideNumber(swiper.activeIndex)}>
          {slides.map((slide, index) => (
            <Slide key={index}>{slide}</Slide>
          ))}
        </Swiper>
        <NavigationButtons>
          <NavButton onClick={() => swiperInstance && swiperInstance.slidePrev()}>Back</NavButton>
          <NavButton onClick={() => swiperInstance && swiperInstance.slideNext()}>Next</NavButton>
        </NavigationButtons>
        <Back>
          <Link to={menu} variant="size30">
            Back to menu
          </Link>
        </Back>
        <RightsContainer>
          <CopyrightText>Generated by ChatGPT</CopyrightText>
          <Image src={chatGptSvg} alt="ChatGPT logo" />
        </RightsContainer>
      </InnerContainer>
    </OuterContainer>
  );
};

export default Tutorial;

const Slide = styled(SwiperSlide)`
  height: auto !important;
`;

const OuterContainer = styled('div')`
  width: 100%;
  height: 100%;
  max-width: 100vw;
  max-height: 100vh;
  display: grid;
  justify-content: center;
  align-items: center;
`;

const InnerContainer = styled('div')`
  position: relative;
  max-width: 700px;
  max-height: 90vh;
  height: max-content;
  margin: 0 auto;
  background: ${({ theme }) => theme.colors.core.background.primary};
  padding: 24px 90px;
  border-radius: 20px;

  @media (max-width: ${breakpoints.mobileM}) {
    padding: 12px 14px;
  }
`;

const StyedH1 = styled(H1)`
  text-align: center;
  margin-bottom: 20px;
`;

const Back = styled(Text)`
  margin-top: 10px;
  text-align: center;
  user-select: none;

  ${Link}:hover {
    text-decoration: underline;
  }
`;

const NavigationButtons = styled('div')`
  display: grid;
  grid-template-columns: repeat(2, max-content);
  justify-content: space-between;
  cursor: pointer;
`;

const NavButton = styled(LinkText)`
  user-select: none;
  transition: all 0.25s ease;
  &:hover {
    scale: calc(1.1);
  }
`;

const RightsContainer = styled('div')`
  position: absolute;
  right: 10px;
  bottom: 10px;
  display: flex;
  align-items: flex-end;
  gap: 5px;
`;

const Image = styled('img')`
  width: 25px;
`;
const CopyrightText = styled(Typography)`
  font-size: 16px;
  color: ${({ theme }) => theme.colors.core.text.quinary};
`;
